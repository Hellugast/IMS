@page "/inventories"
@using IMS.UseCases.Inventories.Interfaces;
@using static IMS.WebApp.Controls.Common.AutoCompleteComponent;
@inject IViewInventoriesByNameUseCase ViewInventoriesByNameUseCase

@inject NavigationManager navigationManager

<h3>Inventory List</h3>
<br />
<SearchInventoryComponent OnSearchInventory="OnInventorySearch"></SearchInventoryComponent>

<br />
<InventoryListComponent SearchTerm="@searchTerm"></InventoryListComponent>
<br />
<button type="button" class="btn btn-primary" @onclick="AddInventory">Add Inventory</button>



@code {
    private ItemViewModel? selectedItem = null;

    private string searchTerm = string.Empty;

    public void OnInventorySearch(string searchTerm)
    {
        this.searchTerm = searchTerm;
    }


    private void AddInventory()
    {
        navigationManager.NavigateTo("/addInventory");
    }
    public List<ItemViewModel> SearchFunction(string asd)
    {
        var result = ViewInventoriesByNameUseCase.ExecuteAsync(asd).GetAwaiter().GetResult();
        if (result == null) return null;

        return result.Select(x => new ItemViewModel { Id = x.InventoryId, Name = x.InventoryName }).ToList();
        //return new() { new() { Id = 1, Name = $"{asd}" } };
    }

    private void OnItemSelected(ItemViewModel item)
    {
        selectedItem = item;
    }
}
